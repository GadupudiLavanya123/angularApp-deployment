name: IIS server to Angular Deployment

on:
  push:
    branches:
      - dev  # Trigger deployment when changes are pushed to the 'dev' Branch

jobs:
  deploy:
    runs-on: windows-latest  # Using a Windows runner for IIS deployment

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16 # Ensure this matches your project's Node.js version

      # Step 3: Install Dependencies and Build Angular App
      - name: Install Dependencies
        run: npm install

      - name: Build Angular App
        run: npm run build -- --configuration=production

      # Step 4: Copy files to IIS server
      - name: Deploy to IIS server
        shell: pwsh
        run: |
          $errorActionPreference = "Stop"
          # Set IIS server details
          $server = "192.168.0.103"  # Replace with your IIS server's IP address
          $username = "Lavanya Gadupudi"  # Replace with your IIS server's username (if different)
          $password = "${{ secrets.IIS_PASSWORD }}"  # Store your IIS password securely in GitHub secrets
          
          # Use the environment variable for the working directory
          $sourceDir = "${{ github.workspace }}/dist/my-angular9-app"  # Path to the built Angular app
          $destinationDir = "C:\inetpub\wwwroot\my-angular9-app"  # IIS directory to copy files to
          
          # Create a credential object for authentication
          $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($username, $securePassword)
          
          # Copy files from the Angular build directory to the IIS directory using SMB
          Copy-Item -Path "$sourceDir\*" -Destination "\\$server\$destinationDir" -Recurse -Force

      # Step 5: Restart IIS (optional but recommended)
      - name: Restart IIS
        shell: pwsh
        run: |
          Invoke-Command -ComputerName $server -Credential $credential -ScriptBlock {
            Restart-Service -Name "W3SVC"  # Restart IIS server (W3SVC is the IIS service name)
          }
