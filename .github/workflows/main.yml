name: Deploy Angular App to IIS

on:
  push:
    branches:
      - main  # Change to the branch you want to deploy from

jobs:
  deploy:
    runs-on: windows-latest  # Use Windows runner for better compatibility with IIS

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install Node.js and build the Angular application
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build Angular project
      run: npm run build -- --prod

    # Step 3: Deploy to IIS Server using PowerShell as administrator
    - name: Deploy to IIS Server
      shell: pwsh  # Use PowerShell Core for better compatibility
      run: |
        # Define source and destination directories
        $workspace = "${{ github.workspace }}"  # GitHub Actions workspace
        $source = Join-Path -Path $workspace -ChildPath "dist/my-angular9-app"
        $destination = "C:\inetpub\wwwroot\my-angular9-app"
        
        # Check if the source directory exists
        if (-not (Test-Path -Path $source)) {
            throw "Source directory '$source' does not exist. Ensure the build step completed successfully."
        }
        
        # Check if the destination folder exists; if not, create it
        if (-not (Test-Path -Path $destination)) {
            New-Item -ItemType Directory -Path $destination
        }
        
        # Sync changes to the destination directory
        Write-Host "Syncing files from $source to $destination..."
        robocopy $source $destination /MIR /Z /R:3 /W:5
        if ($LASTEXITCODE -ne 0 -and $LASTEXITCODE -ne 1) {
            throw "File synchronization failed with error code $LASTEXITCODE"
        }

        Write-Host "Files synced successfully from $source to $destination"

        # Restart IIS application pool or site
        $siteName = "my-angular9-app"  # Replace with your IIS site name if different
        Write-Host "Restarting IIS site: $siteName..."
        Restart-WebAppPool -Name $siteName  # Restart application pool (requires IIS module)
        Write-Host "IIS site restarted successfully"
