name: Deploy Angular to IIS Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 3: Install dependencies and build Angular project
    - name: Install dependencies
      run: npm install

    - name: Build Angular app
      run: npm run build -- --prod

    # Step 4: Install pywinrm (WinRM client)
    - name: Install pywinrm
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        pip3 install pywinrm

    # Step 5: Deploy to IIS Server using WinRM
    - name: Deploy to IIS server
      env:
        IIS_SERVER_IP: ${{ secrets.IIS_SERVER_IP }}
        IIS_USER: ${{ secrets.IIS_USER }}
        IIS_PASSWORD: ${{ secrets.IIS_PASSWORD }}
        IIS_DEPLOY_PATH: ${{ secrets.IIS_DEPLOY_PATH }}
      run: |
        echo "Deploying to IIS server at $IIS_SERVER_IP..."

        # Python script to deploy files using WinRM
        python3 - <<'EOF'
        import winrm
        import os

        # Define the IIS server credentials and path
        IIS_SERVER = os.getenv('IIS_SERVER_IP')
        IIS_USER = os.getenv('IIS_USER')
        IIS_PASSWORD = os.getenv('IIS_PASSWORD')
        DEPLOY_PATH = os.getenv('IIS_DEPLOY_PATH')

        # Create the WinRM session to the IIS server
        session = winrm.Session(f'http://{IIS_SERVER}:5985/wsman', auth=(IIS_USER, IIS_PASSWORD))

        # Copy the build files to the IIS server
        copy_command = f'Copy-Item -Path "./dist/my-angular9-app/*" -Destination "{DEPLOY_PATH}" -Recurse -Force'
        session.run_ps(copy_command)

        # Restart IIS service
        restart_command = 'iisreset'
        session.run_ps(restart_command)
        EOF
